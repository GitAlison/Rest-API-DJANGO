# Generated by Django 2.2 on 2018-09-26 21:14

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=20, unique=True, verbose_name='Usúario')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('first_name', models.CharField(blank=True, max_length=20, verbose_name='Primeiro Nome')),
                ('last_name', models.CharField(blank=True, max_length=20, verbose_name='Segundo Nome')),
                ('is_staff', models.BooleanField(blank=True, default=False, verbose_name='É da equipe')),
                ('is_active', models.BooleanField(blank=True, default=True, verbose_name='É ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuarios',
                'verbose_name_plural': 'Usuarios',
                'ordering': ['-id'],
            },
            managers=[
                ('object', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('cpf', models.CharField(blank=True, max_length=20, null=True, verbose_name='CPF')),
                ('rg', models.CharField(blank=True, max_length=20, null=True, verbose_name='RG')),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('logradouro', models.CharField(blank=True, max_length=100, null=True, verbose_name='Logradouro')),
                ('numero', models.IntegerField(blank=True, null=True, verbose_name='N°')),
                ('bairro', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bairro')),
                ('cidade', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade')),
                ('uf', models.CharField(blank=True, max_length=50, null=True, verbose_name='Estado UF')),
                ('observacoes', models.CharField(blank=True, max_length=100, null=True, verbose_name='Observações')),
            ],
        ),
        migrations.CreateModel(
            name='Exercicio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome do exercicio')),
            ],
        ),
        migrations.CreateModel(
            name='Musculo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=50, verbose_name='Nome')),
                ('descricao', models.CharField(blank=True, max_length=100, null=True, verbose_name='Descricao')),
            ],
        ),
        migrations.CreateModel(
            name='Treino',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(verbose_name='Data Treino')),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aluno_treino', to=settings.AUTH_USER_MODEL)),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professor_treino', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FichaPessoal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(verbose_name='Data da ficha')),
                ('altura', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Altura')),
                ('peso', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Peso')),
                ('ombro', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Ombro')),
                ('peitoral', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Peitoral')),
                ('costas', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Costas')),
                ('cintura', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Cintura')),
                ('quadril', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Quadril')),
                ('biseps_esq', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Biseps esquerdo')),
                ('biseps_dir', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Biseps direito')),
                ('antebraco_esq', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Antebraço esquerdo')),
                ('antebraco_dir', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Antebraço direito')),
                ('coxa_esq', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Coxa esquerda')),
                ('coxa_dir', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Coxa eireita')),
                ('pantirrilha_esq', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Pantirrilha esquerda')),
                ('pantirrilha_dir', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Pantirrilha direita')),
                ('aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='aluno_ficha', to=settings.AUTH_USER_MODEL)),
                ('profesor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professor_ficha', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Ficha Pessoal',
                'verbose_name_plural': 'Fichas Pessoais',
            },
        ),
        migrations.CreateModel(
            name='ExercicioTreino',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia', models.CharField(choices=[('DOM', 'Domingo'), ('SEG', 'Segunda'), ('TER', 'Terça'), ('QUA', 'Quarta'), ('QUI', 'Quinta'), ('SEX', 'Sexta'), ('SAB', 'Sabado')], max_length=20, verbose_name='Dia do exercicio')),
                ('repeticoes', models.IntegerField(blank=True, null=True, verbose_name='Repeticoes')),
                ('sequencias', models.IntegerField(blank=True, null=True, verbose_name='Sequencias')),
                ('carga', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, verbose_name='Carga')),
                ('duracao', models.TimeField(blank=True, null=True, verbose_name='Duração')),
                ('descanso', models.TimeField(blank=True, null=True, verbose_name='Tempo de descanso Entre Exercicio')),
                ('exercicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Exercicio')),
                ('treino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Treino')),
            ],
        ),
        migrations.AddField(
            model_name='exercicio',
            name='musculo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Musculo'),
        ),
        migrations.CreateModel(
            name='Solicitacao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data da solicitacao')),
                ('status', models.CharField(choices=[('ACE', 'Aceito'), ('REG', 'Regeitado'), ('PEN', 'Pendente')], default='PEN', max_length=5, verbose_name='Status')),
                ('solicitado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Solicitado_solicitacao', to=settings.AUTH_USER_MODEL)),
                ('solicitante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Solicitante_solicitacao', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('solicitante', 'solicitado')},
            },
        ),
    ]
